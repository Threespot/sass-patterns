//************************************************************************//
// Responsive Grid
//************************************************************************//
$grid-col-pdding: 2%;

// Breakpoints
$grid-2-col-bp: 500px;
$grid-3-col-bp: 600px;
$grid-4-col-bp: 700px;
$grid-5-col-bp: 800px;
$grid-6-col-bp: 900px;

.row {
  @extend %clearfix;
  margin-left: -$grid-col-pdding;
  width: 100% + ($grid-col-pdding * 2);
}

[class^="col-"] {
  float: left;
  padding: $grid-col-pdding;
  width: 100%;
}


// Basic Fractions
.col-3_4 {
  width: 75%;
}

.col-2_3 {
  width: percentage( 2/3 );
}

.col-1_2 {
  width: 50%;
}

.col-1_3 {
  width: percentage( 1/3 );
}

.col-1_4 {
  width: 25%;
}

.col-1_5 {
  width: 20%;
}

.col-1_6 {
  width: percentage( 1/6 );
}


//************************************************************************//
// Example grid that reduces the number of columns automatically as the
// viewport shrinks, creating additional rows, but automatically adjusts the
// width of the extra columns to fill the available space.
//
// Demo: http://sassmeister.com/gist/tedw/11225783
//
// Based on http://codepen.io/futekov/pen/rEgGH
//************************************************************************//
%col-2 {
  @include mq( $grid-2-col-bp ) {
    width: 50%;

    &:nth-child(2n+1):nth-last-child(1) {
      width: 100%;
    }
  }
}
.col-2 {
  @extend %col-2;
}


%col-3 {
  @extend %col-2;

  @include mq( $grid-3-col-bp ) {
    &,
    &:nth-child(2n+1):nth-last-child(1) {
      width: 33.333333333%;
    }

    &:nth-child(3n+1):nth-last-child(2),
    &:nth-child(3n+2):nth-last-child(1) {
      width: 50%;
    }

    &:nth-child(3n+1):nth-last-child(1) {
      width: 100%;
    }
  }
}
.col-3 {
  @extend %col-3;
}


%col-4 {
  @extend %col-3;

  @include mq( $grid-4-col-bp ) {
    &,
    &:nth-child(3n+2):nth-last-child(1),
    &:nth-child(3n+1):nth-last-child(2),
    &:nth-child(3n+1):nth-last-child(1) {
      width: 25%;
    }

    &:nth-child(4n+1):nth-last-child(1) {
      width: 100%;
    }

    &:nth-child(4n+1):nth-last-child(2),
    &:nth-child(4n+2):nth-last-child(1) {
      width: 50%;
    }

    &:nth-child(4n+1):nth-last-child(3),
    &:nth-child(4n+2):nth-last-child(2),
    &:nth-child(4n+3):nth-last-child(1) {
      width: 33.333333333%;
    }
  }
}
.col-4 {
  @extend %col-4;
}


%col-5 {
  @extend %col-4;

  @include mq( $grid-5-col-bp ) {
    &,
    &:nth-child(3n+1):nth-last-child(2)
    &:nth-child(4n+3):nth-last-child(1),
    &:nth-child(4n+2):nth-last-child(1),
    &:nth-child(4n+2):nth-last-child(2),
    &:nth-child(4n+1):nth-last-child(3),
    &:nth-child(4n+1):nth-last-child(2),
    &:nth-child(4n+1):nth-last-child(1) {
      width: 20%;
    }

    &:nth-child(5n+1):nth-last-child(1) {
      width: 100%;
    }

    &:nth-child(5n+1):nth-last-child(2),
    &:nth-child(5n+2):nth-last-child(1) {
      width: 50%;
    }

    &:nth-child(5n+1):nth-last-child(3),
    &:nth-child(5n+2):nth-last-child(2),
    &:nth-child(5n+3):nth-last-child(1) {
      width: 33.333333333%;
    }

    &:nth-child(5n+1):nth-last-child(4),
    &:nth-child(5n+2):nth-last-child(3),
    &:nth-child(5n+3):nth-last-child(2),
    &:nth-child(5n+4):nth-last-child(1) {
      width: 25%;
    }
  }
}
.col-5 {
  @extend %col-5;
}


%col-6 {
  @extend %col-5;

  @include mq( $grid-6-col-bp ) {
    &,
    &:nth-child(4n+1):nth-last-child(2),
    &:nth-child(4n+1):nth-last-child(3),
    &:nth-child(5n+3):nth-last-child(2),
    &:nth-child(5n+3):nth-last-child(1),
    &:nth-child(5n+2):nth-last-child(3),
    &:nth-child(5n+2):nth-last-child(2),
    &:nth-child(5n+2):nth-last-child(1),
    &:nth-child(5n+1):nth-last-child(4),
    &:nth-child(5n+1):nth-last-child(3),
    &:nth-child(5n+1):nth-last-child(2),
    &:nth-child(5n+1):nth-last-child(1) {
      width: 16.666666666%;
    }

    &:nth-child(6n+1):nth-last-child(1) {
      width: 100%;
    }

    &:nth-child(6n+1):nth-last-child(2),
    &:nth-child(6n+2):nth-last-child(1) {
      width: 50%;
    }

    &:nth-child(6n+1):nth-last-child(3),
    &:nth-child(6n+2):nth-last-child(2),
    &:nth-child(6n+3):nth-last-child(1) {
      width: 33.333333333%;
    }

    &:nth-child(6n+1):nth-last-child(4),
    &:nth-child(6n+2):nth-last-child(3),
    &:nth-child(6n+3):nth-last-child(2),
    &:nth-child(6n+4):nth-last-child(1) {
      width: 25%;
    }

    &:nth-child(6n+1):nth-last-child(5),
    &:nth-child(6n+2):nth-last-child(4),
    &:nth-child(6n+3):nth-last-child(3),
    &:nth-child(6n+4):nth-last-child(2),
    &:nth-child(6n+5):nth-last-child(1) {
      width: 20%;
    }
  }
}
.col-6 {
  @extend %col-6;
}
